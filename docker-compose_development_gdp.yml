# docker-compose version
version: '3.7'

services:
  devmail:
    image: mwader/postfix-relay
    container_name: devmail
    depends_on:
      - devdns
    ports:
      - "127.0.0.1:25:25"
    environment:
      POSTFIX_myhostname: ${SMTP_SERVER}
    networks:
      default:
        aliases:
          - mail.migrid.test

  devdns:
    image: ruudud/devdns
    container_name: devdns
    ports:
        - "127.0.0.1:53:53/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: ${TZ}
      NETWORK: ${DOCKER_NETWORK:-docker-migrid_default}

  # The migrid core services including httpd and tightly integrated services
  # like job handling (grid script, monitor, sshmux, imnoty and vmproxy)

  # NOTE: in order to test the publishing of container services on the host
  #       with standard ports on 1.2.3.x one can set up a local dummy device:
  #       sudo ip link add dummylan type dummy
  #       sudo ip addr add 1.2.3.1/24 dev dummylan
  #       sudo ip link set dummylan up
  #
  #       Then use the local firewall to forward the standard low service ports
  #       to the exposed high ones.

  migrid:
    container_name: migrid
    image: ucphhpc/migrid${CONTAINER_TAG}
    extends:
      file: docker-compose_shared.yml
      service: migrid-shared
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: httpd script monitor sshmux events cron transfers imnotify vmproxy notify crond rsyslogd
    depends_on:
      - devdns
    networks:
      default:
        aliases:
          - www.gdp.test
          - cert.gdp.test
          - ext.gdp.test
          - oid.gdp.test
          - sid.gdp.test
    volumes:
      - ${DOCKER_MIGRID_ROOT}/certs:/etc/httpd/MiG-certificates
      - ${DOCKER_MIGRID_ROOT}/httpd:/etc/httpd/
      - ${DOCKER_MIGRID_ROOT}/mig:/home/mig/mig
      - ${DOCKER_MIGRID_ROOT}/state:/home/mig/state
      - ${DOCKER_MIGRID_ROOT}/log/migrid:/var/log
      - type: bind
        source: /run/dbus/system_bus_socket
        target: /run/dbus/system_bus_socket

    env_file:
      - migrid-httpd.env
    # IMPORTANT: please ONLY run with this test@ user for non-public hosts
    command: /app/docker-entry.sh -V -u ${MIG_TEST_USER} -p ${MIG_TEST_USER_PASSWORD} -s "sftp ftps webdavs"
    # NOTE: public hosts should create users through sign up and run like this
    #command: /app/docker-entry.sh -V

  # Multiple containers with individual daemons not provided by base migrid
  migrid-openid:
    container_name: migrid-openid
    image: ucphhpc/migrid${CONTAINER_TAG}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: openid rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "${OPENID_PORT}:${OPENID_PORT}"
    networks:
      default:
        aliases:
          - openid.gdp.test
    volumes:
      - ${DOCKER_MIGRID_ROOT}/certs:/etc/httpd/MiG-certificates
      - ${DOCKER_MIGRID_ROOT}/httpd:/etc/httpd/
      - ${DOCKER_MIGRID_ROOT}/mig:/home/mig/mig
      - ${DOCKER_MIGRID_ROOT}/state:/home/mig/state
      - ${DOCKER_MIGRID_ROOT}/log/migrid-openid:/var/log
    command: /app/docker-entry.sh

  migrid-sftp:
    container_name: migrid-sftp
    image: ucphhpc/migrid${CONTAINER_TAG}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: sftp sftpsubsys rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "${SFTP_PORT}:${SFTP_PORT}"
      - "${SFTP_SUBSYS_PORT}:${SFTP_SUBSYS_PORT}"
    networks:
      default:
        aliases:
          - sftp.gdp.test
    volumes:
      - ${DOCKER_MIGRID_ROOT}/certs:/etc/httpd/MiG-certificates
      - ${DOCKER_MIGRID_ROOT}/httpd:/etc/httpd/
      - ${DOCKER_MIGRID_ROOT}/mig:/home/mig/mig
    command: /app/docker-entry.sh

  migrid-ftps:
    container_name: migrid-ftps
    image: ucphhpc/migrid${CONTAINER_TAG}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: ftps rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "${FTPS_CTRL_PORT}:${FTPS_CTRL_PORT}"
      - "${FTPS_PASSIVE_PORTS}:${FTPS_PASSIVE_PORTS}"
    networks:
      default:
        aliases:
          - ftps.gdp.test
    volumes:
      - ${DOCKER_MIGRID_ROOT}/certs:/etc/httpd/MiG-certificates
      - ${DOCKER_MIGRID_ROOT}/httpd:/etc/httpd/
      - ${DOCKER_MIGRID_ROOT}/mig:/home/mig/mig
      - ${DOCKER_MIGRID_ROOT}/state:/home/mig/state
    command: /app/docker-entry.sh

  migrid-webdavs:
    container_name: migrid-webdavs
    image: ucphhpc/migrid${CONTAINER_TAG}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: webdavs rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "${DAVS_PORT}:${DAVS_PORT}"
    networks:
      default:
        aliases:
          - webdavs.gdp.test
    volumes:
      - ${DOCKER_MIGRID_ROOT}/certs:/etc/httpd/MiG-certificates
      - ${DOCKER_MIGRID_ROOT}/httpd:/etc/httpd/
      - ${DOCKER_MIGRID_ROOT}/mig:/home/mig/mig
      - ${DOCKER_MIGRID_ROOT}/state:/home/mig/state
      - ${DOCKER_MIGRID_ROOT}/log/migrid-webdavs:migrid-webdavs-syslog
    command: /app/docker-entry.sh

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    # TODO: can we add an httpd health check and switch to wait for condition
    #       service_healthy to avoid the storm of initial avoid nginx errors
    #       from racing apache during start up? Apparently that will not work
    #       with on-going jupyter integration due to swarm mode, however.
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "80:80"
      - "443:443"
      - "444:444"
      - "445:445"
      - "446:446"
      - "447:447"
      - "448:448"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy-development_gdp.conf:/etc/nginx/conf.d/migrid.conf
      - ./nginx-harden-https.conf:/etc/nginx/harden-https.conf
      - ./certs/MiG/*.gdp.test/server.crt:/etc/nginx/certs/www.gdp.test.crt
      - ./certs/MiG/*.gdp.test/server.crt:/etc/nginx/certs/cert.gdp.test.crt
      - ./certs/MiG/*.gdp.test/server.crt:/etc/nginx/certs/ext.gdp.test.crt
      - ./certs/MiG/*.gdp.test/server.crt:/etc/nginx/certs/oid.gdp.test.crt
      - ./certs/MiG/*.gdp.test/server.crt:/etc/nginx/certs/sid.gdp.test.crt
      - ./certs/MiG/*.gdp.test/server.key:/etc/nginx/certs/www.gdp.test.key
      - ./certs/MiG/*.gdp.test/server.key:/etc/nginx/certs/cert.gdp.test.key
      - ./certs/MiG/*.gdp.test/server.key:/etc/nginx/certs/ext.gdp.test.key
      - ./certs/MiG/*.gdp.test/server.key:/etc/nginx/certs/oid.gdp.test.key
      - ./certs/MiG/*.gdp.test/server.key:/etc/nginx/certs/sid.gdp.test.key
      - ./certs/dhparams.pem:/etc/nginx/dhparam/dhparam.pem
