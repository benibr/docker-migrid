# IMPORTANT: this is a sample env file with the setup used for the default simple
#            docker build. To adjust the build settings you can copy it to ./.env and
#            make your desired changes before running
#            make init && make build

# Optionally use DOCKER_MIGRID_ROOT to point to another root location than PWD,
# which might be useful e.g. when automating deployment with ansible.
DOCKER_MIGRID_ROOT=.

# The build type specifies the version of MiGrid that should be build
# Fow now, the following types are supported.
# {basic,advanced}
BUILD_TYPE=basic

# Set to override container user and group IDs
#UID=1000
#GID=1000
#USER=mig

# The domain in which the instance should be accessible
DOMAIN=migrid.test
WILDCARD_DOMAIN=*.migrid.test
PUBLIC_DOMAIN=www.migrid.test
MIGCERT_DOMAIN=
EXTCERT_DOMAIN=
MIGOID_DOMAIN=ext.migrid.test
EXTOID_DOMAIN=
EXTOIDC_DOMAIN=
SID_DOMAIN=sid.migrid.test
IO_DOMAIN=io.migrid.test
OPENID_DOMAIN=openid.migrid.test
FTPS_DOMAIN=ftps.migrid.test
SFTP_DOMAIN=sftp.migrid.test
WEBDAVS_DOMAIN=webdavs.migrid.test
MIG_OID_PROVIDER=https://ext.migrid.test/openid/
EXT_OID_PROVIDER=unset
EXT_OIDC_PROVIDER_META_URL=unset
EXT_OIDC_CLIENT_NAME=unset
EXT_OIDC_CLIENT_ID=unset
EXT_OIDC_SCOPE="profile email"
EXT_OIDC_REMOTE_USER_CLAIM=sub
# Uncomment to enable workaround for OpenID Connect sign up with accented chars
#EXT_OIDC_PASS_CLAIM_AS="both latin1"
PUBLIC_HTTP_PORT=80
PUBLIC_HTTPS_PORT=444
MIGCERT_HTTPS_PORT=446
EXTCERT_HTTPS_PORT=447
MIGOID_HTTPS_PORT=443
EXTOID_HTTPS_PORT=445
EXTOIDC_HTTPS_PORT=449
SID_HTTPS_PORT=448
SFTP_PORT=2222
SFTP_SUBSYS_PORT=22222
SFTP_SHOW_PORT=2222
DAVS_PORT=4443
DAVS_SHOW_PORT=4443
OPENID_PORT=8443
OPENID_SHOW_PORT=443
FTPS_CTRL_PORT=8021
FTPS_CTRL_SHOW_PORT=21
FTPS_PASSIVE_PORTS=8100-8399

# Various helpers
ADMIN_EMAIL="MiG Info <mig@migrid.test>"
ADMIN_LIST=
SMTP_SENDER=
SMTP_SERVER=mail.migrid.test
LOG_LEVEL=info
TITLE="Minimum intrusion Grid"
SHORT_TITLE=MiG
MIG_OID_TITLE="MiG"
EXT_OID_TITLE="External"
PEERS_PERMIT="distinguished_name:.*"
VGRID_CREATORS="distinguished_name:.*"
VGRID_MANAGERS="distinguished_name:.*"

# Which site setup flavor to emulate regarding skin, etc.
# {migrid, idmc, erda, sif}
EMULATE_FLAVOR=migrid
# and the corresponding FQDN used e.g. in that flavor index-FQDN.html
EMULATE_FQDN=migrid.org
SKIN_SUFFIX=basic

# Site settings
ENABLE_OPENID=True
ENABLE_SFTP=True
ENABLE_SFTP_SUBSYS=True
ENABLE_DAVS=True
ENABLE_FTPS=True
ENABLE_SHARELINKS=True
ENABLE_TRANSFERS=True
ENABLE_DUPLICATI=True
ENABLE_SEAFILE=False
ENABLE_SANDBOXES=False
ENABLE_VMACHINES=False
ENABLE_CRONTAB=True
ENABLE_JOBS=True
ENABLE_RESOURCES=True
ENABLE_EVENTS=True
ENABLE_FREEZE=False
ENABLE_CRACKLIB=True
ENABLE_IMNOTIFY=False
ENABLE_NOTIFY=True
ENABLE_PREVIEW=False
ENABLE_WORKFLOWS=False
ENABLE_VERIFY_CERTS=True
ENABLE_JUPYTER=True
ENABLE_TWOFACTOR=True
ENABLE_TWOFACTOR_STRICT_ADDRESS=False
ENABLE_PEERS=True
# NOTE: one should adjust any test user credentials with this policy
MIG_PASSWORD_POLICY="MEDIUM"
PEERS_MANDATORY=False
PEERS_EXPLICIT_FIELDS=""
PEERS_CONTACT_HINT="authorized to invite you as peer"
ENABLE_MIGADMIN=True
ENABLE_GDP=False
GDP_EMAIL_NOTIFY=False
# NOTE: one could consider this option to mig.shared.configuration and use in mig.shared.url.urlopen
# https://www.tutorialexample.com/best-practice-to-urllib-request-ignore-ssl-verification-in-python-3-x-py
# but using self-signed certs is already a bad hack.
ENABLE_SELF_SIGNED_CERTS=True
UPGRADE_MOD_AUTH_OPENIDC=False
UPGRADE_PARAMIKO=False
PUBKEY_FROM_DNS=False
MODERN_WSGIDAV=False
PREFER_PYTHON3=False

SIGNUP_METHODS=migoid
LOGIN_METHODS=migoid
USER_INTERFACES=V3
AUTO_ADD_CERT_USER=False
AUTO_ADD_OID_USER=True
AUTO_ADD_OIDC_USER=False
CERT_VALID_DAYS=365
OID_VALID_DAYS=365
GENERIC_VALID_DAYS=365
OPENSSH_VERSION=7.4
VGRID_LABEL=VGrid
# Menu options override default and available extra Apps on personal Home page
#DEFAULT_MENU=
#USER_MENU=
# Site-specific javascript and stylesheets to inject on user pages
EXTRA_USERPAGE_SCRIPTS=""
EXTRA_USERPAGE_STYLES=""

# Which svn repo and version of migrid should be used
MIG_SVN_REPO=https://svn.code.sf.net/p/migrid/code/trunk
MIG_SVN_REV=5779

# NOTE: use 'git edge' here for tried and tested python2 version
# Which git repo and version of migrid should be used
MIG_GIT_REPO=https://github.com/ucphhpc/migrid-sync.git
MIG_GIT_BRANCH=edge
#MIG_GIT_REV=39de81e96bd82ac272dcbdc3ad178653c38724b3

# Toggle future Python3 support
WITH_PY3=False

# Toggle git support - effectively switches from SVN to GIT options above
WITH_GIT=True

# Which timezone should the service use
TZ=Europe/Copenhagen

# The URL of the of designated jupyter services
# The url is prefixed by the name of the service itself
JUPYTER_SERVICES="dag.http://dag.test"

# The description associated with each jupyter service
# The key is the name of the service it describes
JUPYTER_SERVICES_DESC="{'dag': '/home/mig/state/wwwpublic/dag_desc.html'}"

# Jupyterhub variables
# Required when the 'auth_state' flag is enabled
# means that the 'hub/setup_jup_crypt_secrets.sh script
# must be sourced before the stack is deployed
# https://jupyterhub.readthedocs.io/en/stable/reference/authenticators.html
JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}

# https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#generating-and-storing-as-an-environment-variable
# Used by the proxy and JupyterHub for authentication
CONFIGPROXY_AUTH_TOKEN=${CONFIGPROXY_AUTH_TOKEN}

# User that is created inside migrid for testing purposes
# Must be explicitly used in docker-compose.yml
MIG_TEST_USER=test@external.domain
MIG_TEST_USER_PASSWORD=TestPw0rd
